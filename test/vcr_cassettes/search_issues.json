[
  {
    "request": {
      "body": "",
      "headers": [],
      "method": "get",
      "options": [],
      "request_body": "",
      "url": "https://api.github.com/search/issues?q=repo:elixir-lang/ecto+state:closed+label:Kind:Bug&sort=created&order=asc"
    },
    "response": {
      "body": "{\"total_count\":47,\"incomplete_results\":false,\"items\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/43\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/43/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/43/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/43/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/43\",\"id\":17493488,\"number\":43,\"title\":\"Support div and rem, discuss what should happen with /\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfe5bf\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":1,\"created_at\":\"2013-08-01T07:09:25Z\",\"updated_at\":\"2013-08-05T12:26:22Z\",\"closed_at\":\"2013-08-05T12:26:22Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/59\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/59/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/59/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/59/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/59\",\"id\":18353982,\"number\":59,\"title\":\"Join binding should work even if too few bindings are specified\",\"user\":{\"login\":\"ericmj\",\"id\":316890,\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2013-08-21T13:37:10Z\",\"updated_at\":\"2013-08-30T21:34:34Z\",\"closed_at\":\"2013-08-30T21:34:34Z\",\"body\":\"The following will fail right now because the `c` binding will refer to `Post` because not enough bindings were specified in the `join`.\\r\\n\\r\\n```elixir\\r\\nfrom(Post) |> join([], c in Comment, c.id == 42)\\r\\n```\\r\\n\\r\\nWe need to take into account the number of entities on the query at runtime when escaping the \\\"on\\\" expression. (Make sure to only unquote the query once, will probably need to use `var!`.)\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/66\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/66/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/66/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/66/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/66\",\"id\":19064063,\"number\":66,\"title\":\"`Repo.all(post.comments)` should fail when post has nil primary key\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2013-09-05T17:51:14Z\",\"updated_at\":\"2013-09-06T16:22:35Z\",\"closed_at\":\"2013-09-06T16:22:35Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/75\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/75/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/75/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/75/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/75\",\"id\":19636300,\"number\":75,\"title\":\"has_many not respecting foreign_key option\",\"user\":{\"login\":\"reset\",\"id\":54036,\"avatar_url\":\"https://avatars.githubusercontent.com/u/54036?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/reset\",\"html_url\":\"https://github.com/reset\",\"followers_url\":\"https://api.github.com/users/reset/followers\",\"following_url\":\"https://api.github.com/users/reset/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/reset/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/reset/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/reset/subscriptions\",\"organizations_url\":\"https://api.github.com/users/reset/orgs\",\"repos_url\":\"https://api.github.com/users/reset/repos\",\"events_url\":\"https://api.github.com/users/reset/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/reset/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2013-09-17T19:39:51Z\",\"updated_at\":\"2013-09-17T21:15:25Z\",\"closed_at\":\"2013-09-17T21:05:36Z\",\"body\":\"Given this contrived queryable definition:\\r\\n\\r\\n```elixir\\r\\ndefmodule User\\r\\n  queryable \\\"users\\\" do\\r\\n    has_many :sent_friend_requests, FriendRequest, foreign_key: :sender_id\\r\\n    has_many :received_friend_requests, FriendRequest, foreign_key: :receiver_id\\r\\n    ...\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\nThe foreign_key will be set to the default value of `user_id` upon inspection of the entity's generated association\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/96\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/96/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/96/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/96/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/96\",\"id\":21643538,\"number\":96,\"title\":\"mix text creates - (ArgumentError) expected contents inside brackets to be a Keyword\",\"user\":{\"login\":\"nicholasf\",\"id\":19967,\"avatar_url\":\"https://avatars.githubusercontent.com/u/19967?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nicholasf\",\"html_url\":\"https://github.com/nicholasf\",\"followers_url\":\"https://api.github.com/users/nicholasf/followers\",\"following_url\":\"https://api.github.com/users/nicholasf/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nicholasf/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nicholasf/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nicholasf/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nicholasf/orgs\",\"repos_url\":\"https://api.github.com/users/nicholasf/repos\",\"events_url\":\"https://api.github.com/users/nicholasf/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nicholasf/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":5,\"created_at\":\"2013-10-26T23:51:39Z\",\"updated_at\":\"2013-10-29T07:25:12Z\",\"closed_at\":\"2013-10-29T07:25:12Z\",\"body\":\"Hi,\\r\\n\\r\\nPlease see:\\r\\n\\r\\n```\\r\\n♪  ecto git:(master) mix test\\r\\n** (ArgumentError) expected contents inside brackets to be a Keyword\\r\\n    /Users/nicholasf/code/nicholasf/elixir/lib/elixir/lib/record.ex:424: Record.access/4\\r\\n    test/ecto/associations_test.exs:7: Kernel.access/2\\r\\n    test/ecto/associations_test.exs:7: Ecto.Entity.__before_compile__/1\\r\\n```\\r\\n\\r\\n\\r\\nI'm using Elixir 0.10.4-dev.\\r\\n\\r\\nCheers,\\r\\nNicholas\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/104\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/104/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/104/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/104/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/104\",\"id\":22002415,\"number\":104,\"title\":\"Commit 46744986ed appears to break queries.\",\"user\":{\"login\":\"john-vinters\",\"id\":147399,\"avatar_url\":\"https://avatars.githubusercontent.com/u/147399?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/john-vinters\",\"html_url\":\"https://github.com/john-vinters\",\"followers_url\":\"https://api.github.com/users/john-vinters/followers\",\"following_url\":\"https://api.github.com/users/john-vinters/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/john-vinters/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/john-vinters/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/john-vinters/subscriptions\",\"organizations_url\":\"https://api.github.com/users/john-vinters/orgs\",\"repos_url\":\"https://api.github.com/users/john-vinters/repos\",\"events_url\":\"https://api.github.com/users/john-vinters/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/john-vinters/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":6,\"created_at\":\"2013-11-02T14:27:47Z\",\"updated_at\":\"2013-11-02T18:07:38Z\",\"closed_at\":\"2013-11-02T16:55:18Z\",\"body\":\"After updating to 46744986ed or later, queries involving boolean operators seem to fail.  For example, running the ecto_simple example code gives the following error:\\r\\n```\\r\\n** (Ecto.InvalidQuery) function `or/2` not defined in query API\\r\\n    deps/ecto/lib/ecto/query/validator.ex:272: Ecto.Query.Validator.type_check/2\\r\\n    deps/ecto/lib/ecto/query/validator.ex:133: Ecto.Query.Validator.\\\"-validate_booleans/3-fun-0-\\\"/3\\r\\n    /private/tmp/elixir-ltF6/lib/elixir/lib/enum.ex:354: Enum.\\\"-each/2-lists^foreach/1-0-\\\"/2\\r\\n    /private/tmp/elixir-ltF6/lib/elixir/lib/enum.ex:354: Enum.each/2\\r\\n    deps/ecto/lib/ecto/query/validator.ex:40: Ecto.Query.Validator.validate/3\\r\\n    deps/ecto/lib/ecto/repo/backend.ex:45: Ecto.Repo.Backend.all/3\\r\\n```\\r\\n\\r\\nEcto's in-built test suite seems to pass OK.\\r\\nI'm running Elixir 0.11.1-dev (updated immediately before testing).\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/118\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/118/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/118/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/118/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/118\",\"id\":23409215,\"number\":118,\"title\":\"Table names and field names should be quoted\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"207de5\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2013-11-27T19:16:47Z\",\"updated_at\":\"2013-12-27T17:22:18Z\",\"closed_at\":\"2013-12-27T17:22:18Z\",\"body\":\"There are two reasons for this:\\r\\n\\r\\n1. To ensure we won't have an injection once we add more flexibility to the language (for example, `field/2` is vulnerable in the field name). Here is a failing test:\\r\\n\\r\\n    ```elixir\\r\\n    x = :\\\"\\\\\\\"id\\\"\\r\\n    query = from(Model) |> where([m], field(m, ^x) == 1) |> normalize\\r\\n    assert   SQL.select(query) == %s[SELECT m0.id, m0.x, m0.y\\\\nFROM model AS m0\\\\nWHERE (m0.\\\"\\\\\\\"id\\\" = 1)]\\r\\n    ```\\r\\n\\r\\n2. To ensure people can name their columns \\\"year\\\" and it won't conflict with keywords from SQL\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/120\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/120/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/120/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/120/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/120\",\"id\":23538162,\"number\":120,\"title\":\"Should group_by allow more than one var?\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2013-12-01T15:33:34Z\",\"updated_at\":\"2013-12-27T19:15:59Z\",\"closed_at\":\"2013-12-27T19:15:59Z\",\"body\":\"Today group_by allows a variable only at the \\\"root\\\":\\r\\n\\r\\n    group_by: p\\r\\n\\r\\nShould we also allow:\\r\\n\\r\\n    group_by: [p, c]\\r\\n\\r\\nOr:\\r\\n\\r\\n    group_by: [p, c.field]\\r\\n\\r\\n?\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/187\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/187/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/187/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/187/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/187\",\"id\":28847166,\"number\":187,\"title\":\"Handling of Ecto.Binary and Ecto.Array in Repo.create/1 return value\",\"user\":{\"login\":\"TanYewWei\",\"id\":204289,\"avatar_url\":\"https://avatars.githubusercontent.com/u/204289?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/TanYewWei\",\"html_url\":\"https://github.com/TanYewWei\",\"followers_url\":\"https://api.github.com/users/TanYewWei/followers\",\"following_url\":\"https://api.github.com/users/TanYewWei/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/TanYewWei/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/TanYewWei/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/TanYewWei/subscriptions\",\"organizations_url\":\"https://api.github.com/users/TanYewWei/orgs\",\"repos_url\":\"https://api.github.com/users/TanYewWei/repos\",\"events_url\":\"https://api.github.com/users/TanYewWei/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/TanYewWei/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2014-03-06T03:22:04Z\",\"updated_at\":\"2014-03-06T11:17:15Z\",\"closed_at\":\"2014-03-06T11:01:36Z\",\"body\":\"I'm finding that `Repo.create/1` is returning an entity with raw `Ecto.Binary` and `Ecto.Array` values, while `Repo.all/1` or `Repo.get/2` returns entities with these Ecto types casted to their Elixir counterparts.\\r\\n\\r\\nHere's an example using the existing integration test code -- https://github.com/TanYewWei/ecto/commit/694d8b3f8183d94f8415e68790c3dee2b413002a\\r\\n\\r\\nShouldn't the create function also return an entity with Elixir strings and lists instead of the corresponding Ecto types?\\r\\n\\r\\n---\\r\\n\\r\\nWe should also update the README to use `:array` instead of `:list`, as well as document the handling of the Ecto.Array and Ecto.Binary types somewhere.\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/196\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/196/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/196/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/196/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/196\",\"id\":30304587,\"number\":196,\"title\":\"parse_url should be imported into Ecto.Repo rather than defined\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2014-03-27T14:27:01Z\",\"updated_at\":\"2014-05-23T14:40:42Z\",\"closed_at\":\"2014-05-23T14:40:42Z\",\"body\":\"[Similar to how we handle `app_dir`](https://github.com/elixir-lang/ecto/blob/master/lib/ecto/repo.ex#L57).\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/202\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/202/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/202/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/202/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/202\",\"id\":30923388,\"number\":202,\"title\":\"broken \\\"where\\\" statement\",\"user\":{\"login\":\"kalloc\",\"id\":177687,\"avatar_url\":\"https://avatars.githubusercontent.com/u/177687?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/kalloc\",\"html_url\":\"https://github.com/kalloc\",\"followers_url\":\"https://api.github.com/users/kalloc/followers\",\"following_url\":\"https://api.github.com/users/kalloc/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/kalloc/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/kalloc/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/kalloc/subscriptions\",\"organizations_url\":\"https://api.github.com/users/kalloc/orgs\",\"repos_url\":\"https://api.github.com/users/kalloc/repos\",\"events_url\":\"https://api.github.com/users/kalloc/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/kalloc/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":1,\"created_at\":\"2014-04-05T20:32:12Z\",\"updated_at\":\"2014-04-08T17:04:27Z\",\"closed_at\":\"2014-04-08T17:04:27Z\",\"body\":\"I found a bug, If you can, please, help me!\\r\\n\\r\\nnext statement\\r\\n```\\r\\nquery = from(p in Post,\\r\\n             where: p.id > 0)\\r\\nquery = from(p in query,\\r\\n             join: u in User, on: u.id == p.user_id)\\r\\nMy.Repo.all(from p in query,\\r\\n            left_join: v in Views, on: v.post_id == p.id and v.user_id == 26,\\r\\n            where: v.id == nil,\\r\\n            select: p.id)\\r\\n```\\r\\nwill be produced\\r\\n```\\r\\n[LOG/query] SELECT p0.\\\"id\\\" FROM \\\"post\\\" AS p0\\r\\nINNER JOIN \\\"users\\\" AS u0 ON u0.\\\"id\\\" = p0.\\\"user_id\\\"\\r\\nLEFT OUTER JOIN \\\"views\\\" AS v0 ON (v0.\\\"post_id\\\" = p0.\\\"id\\\") AND (v0.\\\"user_id\\\" = 26)\\r\\nWHERE (p0.\\\"id\\\" > 0) AND (u0.\\\"id\\\" IS NULL)\\r\\n```\\r\\nbut must produced\\r\\n```\\r\\n[LOG/query] SELECT p0.\\\"id\\\" FROM \\\"post\\\" AS p0\\r\\nINNER JOIN \\\"users\\\" AS u0 ON u0.\\\"id\\\" = p0.\\\"user_id\\\"\\r\\nLEFT OUTER JOIN \\\"views\\\" AS v0 ON (v0.\\\"post_id\\\" = p0.\\\"id\\\") AND (v0.\\\"user_id\\\" = 26)\\r\\nWHERE (p0.\\\"id\\\" > 0) AND (v0.\\\"id\\\" IS NULL)\\r\\n```\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/252\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/252/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/252/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/252/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/252\",\"id\":39296990,\"number\":252,\"title\":\"Do not ensure a non-required model was compiled from a model\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2014-08-01T14:54:17Z\",\"updated_at\":\"2014-08-23T16:03:26Z\",\"closed_at\":\"2014-08-23T16:03:26Z\",\"body\":\"If we are inside a model, we should only ensure another model is compiled if that model is myself or if the model was explicitly required before hand. This way, we avoid the race conditions at outlined here: https://github.com/elixir-lang/elixir/issues/2568\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/287\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/287/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/287/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/287/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/287\",\"id\":43693494,\"number\":287,\"title\":\"Query with :preload returns nil if associated record was not found\",\"user\":{\"login\":\"ayarulin\",\"id\":903562,\"avatar_url\":\"https://avatars.githubusercontent.com/u/903562?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ayarulin\",\"html_url\":\"https://github.com/ayarulin\",\"followers_url\":\"https://api.github.com/users/ayarulin/followers\",\"following_url\":\"https://api.github.com/users/ayarulin/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ayarulin/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ayarulin/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ayarulin/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ayarulin/orgs\",\"repos_url\":\"https://api.github.com/users/ayarulin/repos\",\"events_url\":\"https://api.github.com/users/ayarulin/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ayarulin/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":1,\"created_at\":\"2014-09-23T22:39:55Z\",\"updated_at\":\"2014-09-24T19:27:47Z\",\"closed_at\":\"2014-09-24T19:27:47Z\",\"body\":\"This is example from README:\\r\\n```\\r\\nquery = from(c in Comment, where: c.id == 42, preload: :post)\\r\\n[comment] = Repo.all(query)\\r\\n```\\r\\nIt returns ```nil``` if no post was found for comment with id 42. Seems like this is bug, and query should return comment anyway, and ```nil``` only for ```comment.post```, right?\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/290\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/290/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/290/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/290/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/290\",\"id\":44469067,\"number\":290,\"title\":\"How to use UUID's as primary key?\",\"user\":{\"login\":\"Psli\",\"id\":43417,\"avatar_url\":\"https://avatars.githubusercontent.com/u/43417?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Psli\",\"html_url\":\"https://github.com/Psli\",\"followers_url\":\"https://api.github.com/users/Psli/followers\",\"following_url\":\"https://api.github.com/users/Psli/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Psli/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Psli/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Psli/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Psli/orgs\",\"repos_url\":\"https://api.github.com/users/Psli/repos\",\"events_url\":\"https://api.github.com/users/Psli/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Psli/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":3,\"created_at\":\"2014-09-30T16:35:29Z\",\"updated_at\":\"2014-10-03T15:34:48Z\",\"closed_at\":\"2014-10-01T18:10:51Z\",\"body\":\"ecto version: \\\"0.2.6-dev\\\"\\r\\n\\r\\nI wanted to use UUID's as my primary key on postgres db. \\r\\nThe model like this: \\r\\n```elixir\\r\\ndefmodule Item do\\r\\n  use Ecto.Model\\r\\n  schema \\\"items\\\", primary_key: { :id, :uuid, []} do\\r\\n    field :some, :string\\r\\n    field :created_at, :datetime\\r\\n  end\\r\\nend\\r\\n```\\r\\nWhen I try to get the item I get the following error:\\r\\n```elixir\\r\\niex(7)> id = <<142, 180, 236, 138, 221, 1, 69, 20, 156, 16, 182, 24, 34, 37, 183, 102>>\\r\\niex(7)> Repo.get(Item, id)\\r\\n** (Ecto.Query.TypeCheckError) the following expression does not type check:\\r\\n\\r\\n    &0.id() == ^0\\r\\n\\r\\nAllowed types for ==/2:\\r\\n\\r\\n    number == number\\r\\n    var == var\\r\\n    nil == _\\r\\n    _ == nil\\r\\n\\r\\nGot: uuid == string\\r\\n\\r\\n      (ecto) lib/ecto/query/validator.ex:320: Ecto.Query.Validator.type_check/2\\r\\n      (ecto) lib/ecto/query/validator.ex:518: Ecto.Query.Validator.catch_grouped/1\\r\\n      (ecto) lib/ecto/query/validator.ex:114: anonymous fn/3 in Ecto.Query.Validator.validate_booleans/3\\r\\n      (ecto) lib/ecto/query/validator.ex:530: Ecto.Query.Validator.rescue_metadata/3\\r\\n    (elixir) lib/enum.ex:537: Enum.\\\"-each/2-lists^foreach/1-0-\\\"/2\\r\\n    (elixir) lib/enum.ex:537: Enum.each/2\\r\\n      (ecto) lib/ecto/query/validator.ex:29: Ecto.Query.Validator.validate/3\\r\\n      (ecto) lib/ecto/repo/backend.ex:80: Ecto.Repo.Backend.all/4\\r\\n```\\r\\n\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/292\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/292/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/292/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/292/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/292\",\"id\":44591069,\"number\":292,\"title\":\"Tracking down \\\"no process\\\" error\",\"user\":{\"login\":\"BinaryMuse\",\"id\":189606,\"avatar_url\":\"https://avatars.githubusercontent.com/u/189606?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BinaryMuse\",\"html_url\":\"https://github.com/BinaryMuse\",\"followers_url\":\"https://api.github.com/users/BinaryMuse/followers\",\"following_url\":\"https://api.github.com/users/BinaryMuse/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BinaryMuse/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BinaryMuse/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BinaryMuse/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BinaryMuse/orgs\",\"repos_url\":\"https://api.github.com/users/BinaryMuse/repos\",\"events_url\":\"https://api.github.com/users/BinaryMuse/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BinaryMuse/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":11,\"created_at\":\"2014-10-01T17:20:19Z\",\"updated_at\":\"2015-01-19T13:21:12Z\",\"closed_at\":\"2015-01-19T13:21:12Z\",\"body\":\"Hey, guys,\\r\\n\\r\\nI'm running Ecto 0.2.3 on a cluster of four machines. Occasionally, one of the nodes gives me the following error:\\r\\n\\r\\n```\\r\\n2014-10-01 16:44:21.231 [error] GenServer #PID<0.150.0> terminating\\r\\nLast message: {:query, \\\"SELECT r0.\\\\\\\"id\\\\\\\", r0.\\\\\\\"uuid\\\\\\\", r0.\\\\\\\"script_hash\\\\\\\", r0.\\\\\\\"started\\\\\\\", r0.\\\\\\\"ended\\\\\\\", r0.\\\\\\\"active\\\\\\\", r0.\\\\\\\"node\\\\\\\", r0.\\\\\\\"label\\\\\\\"\\\\nFROM \\\\\\\"recordings\\\\\\\" AS r0\\\\nWHERE (r0.\\\\\\\"active\\\\\\\" = TRUE)\\\\nORDER BY r0.\\\\\\\"started\\\\\\\" DESC\\\", [], 5000}\\r\\nState: %{conn: #PID<0.592.0>, monitor: nil, params: [port: 5432, decoder: #Function<15.98203264/4 in Ecto.Adapters.Postgres.prepare_start/2>, username: \\\"xxxxxxx\\\", password: \\\"xxxxxxx\\\", hostname: \\\"xxxxxxx\\\", database: \\\"xxxxxxx\\\"]}\\r\\n** (exit) exited in: :gen_server.call(#PID<0.592.0>, :stop, :infinity)\\r\\n    ** (EXIT) no process\\r\\n2014-10-01 16:44:21.232 [error] GenServer RecagentExecutor.Server terminating\\r\\nLast message: {:recording_list, [page: 0]}\\r\\nState: %{autostop_timer: nil, pid: nil, uuid: nil, working: false}\\r\\n** (exit) exited in: :gen_server.call(#PID<0.150.0>, {:query, \\\"SELECT r0.\\\\\\\"id\\\\\\\", r0.\\\\\\\"uuid\\\\\\\", r0.\\\\\\\"script_hash\\\\\\\", r0.\\\\\\\"started\\\\\\\", r0.\\\\\\\"ended\\\\\\\", r0.\\\\\\\"active\\\\\\\", r0.\\\\\\\"node\\\\\\\", r0.\\\\\\\"label\\\\\\\"\\\\nFROM \\\\\\\"recordings\\\\\\\" AS r0\\\\nWHERE (r0.\\\\\\\"active\\\\\\\" = TRUE)\\\\nORDER BY r0.\\\\\\\"started\\\\\\\" DESC\\\", [], 5000}, 5000)\\r\\n    ** (EXIT) time out\\r\\n```\\r\\n\\r\\nTrying the request again gives the same error with different pids. I'm having trouble figuring out how I might track down the cause of the problem. Near as I can tell, Ecto is calling `Postgrex.Connection.stop` [in `terminate`](https://github.com/elixir-lang/ecto/blob/fffe9335a980e6e39a4dc0784b7973bcbd871814/lib/ecto/adapters/postgres/worker.ex#L123) and the \\\"no process\\\" exception comes [from there](https://github.com/ericmj/postgrex/blob/bb12d101b659d3383eb8c701f975ce20ec64c46a/lib/postgrex/connection.ex#L70).\\r\\n\\r\\nThe query is:\\r\\n\\r\\n```elixir\\r\\ndefp get_sub_list(active) do\\r\\n  query = from r in Recording, where: r.active == ^active, order_by: [desc: r.started]\\r\\n  RecagentLibrarian.Repo.all(query)\\r\\nend\\r\\n```\\r\\n\\r\\nI have my Repo supervised as such:\\r\\n\\r\\n```elixir\\r\\ndefmodule RecagentLibrarian do\\r\\n  use Application\\r\\n\\r\\n  def start(_type, _args) do\\r\\n    import Supervisor.Spec, warn: false\\r\\n\\r\\n    children = [\\r\\n      worker(RecagentLibrarian.Repo, [], restart: :permanent)\\r\\n    ]\\r\\n\\r\\n    opts = [strategy: :one_for_one, name: RecagentLibrarian.Supervisor]\\r\\n    Supervisor.start_link(children, opts)\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\nAny help or hints in the right direction would be greatly appreciated.\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/293\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/293/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/293/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/293/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/293\",\"id\":44767744,\"number\":293,\"title\":\"can't migrate repo on postgres 9.2 with trusted auth\",\"user\":{\"login\":\"j-mcnally\",\"id\":892382,\"avatar_url\":\"https://avatars.githubusercontent.com/u/892382?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/j-mcnally\",\"html_url\":\"https://github.com/j-mcnally\",\"followers_url\":\"https://api.github.com/users/j-mcnally/followers\",\"following_url\":\"https://api.github.com/users/j-mcnally/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/j-mcnally/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/j-mcnally/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/j-mcnally/subscriptions\",\"organizations_url\":\"https://api.github.com/users/j-mcnally/orgs\",\"repos_url\":\"https://api.github.com/users/j-mcnally/repos\",\"events_url\":\"https://api.github.com/users/j-mcnally/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/j-mcnally/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":7,\"created_at\":\"2014-10-03T05:06:16Z\",\"updated_at\":\"2015-01-13T11:32:47Z\",\"closed_at\":\"2015-01-13T11:32:47Z\",\"body\":\"```\\r\\n** (exit) exited in: :gen_server.call(#PID<0.181.0>, {:query, \\\"CREATE TABLE IF NOT EXISTS schema_migrations (id serial primary key, version bigint)\\\", [], [timeout: 5000]}, 5000)\\r\\n    ** (EXIT) exited in: :gen_server.call(#PID<0.186.0>, {:connect, [port: 5432, encoder: #Function<17.12881986/3 in Ecto.Adapters.Postgres.prepare_start/2>, decoder: #Function<16.12881986/4 in Ecto.Adapters.Postgres.prepare_start/2>, formatter: #Function<15.12881986/1 in Ecto.Adapters.Postgres.prepare_start/2>, username: \\\"webapp\\\", hostname: \\\"localhost\\\", database: \\\"struct\\\"]}, :infinity)\\r\\n        ** (EXIT) an exception was raised:\\r\\n            ** (ArgumentError) argument error\\r\\n                :erlang.iolist_to_binary([nil, \\\"webapp\\\"])\\r\\n                (crypto) crypto.erl:223: :crypto.hash/2\\r\\n                (postgrex) lib/postgrex/connection.ex:519: Postgrex.Connection.message/3\\r\\n                (postgrex) lib/postgrex/connection.ex:491: Postgrex.Connection.new_data/2\\r\\n                (postgrex) lib/postgrex/connection.ex:401: Postgrex.Connection.handle_info/2\\r\\n                (stdlib) gen_server.erl:599: :gen_server.handle_msg/5\\r\\n                (stdlib) proc_lib.erl:239: :proc_lib.init_p_do_apply/3\\r\\n    (stdlib) gen_server.erl:190: :gen_server.call/3\\r\\n    (ecto) lib/ecto/adapters/postgres/worker.ex:18: Ecto.Adapters.Postgres.Worker.query!/4\\r\\n    (ecto) lib/ecto/adapters/postgres.ex:353: Ecto.Adapters.Postgres.use_worker/3\\r\\n    (ecto) lib/ecto/adapters/postgres.ex:514: Ecto.Adapters.Postgres.migrated_versions/1\\r\\n    (ecto) lib/ecto/migrator.ex:92: Ecto.Migrator.pending_in_direction/3\\r\\n    (ecto) lib/ecto/migrator.ex:87: Ecto.Migrator.run_all/3\\r\\n    (mix) lib/mix/cli.ex:55: Mix.CLI.run_task/2\\r\\n\\r\\n\\r\\n04:59:20.401 [error] GenServer #PID<0.186.0> terminating\\r\\nLast message: {:tcp, #Port<0.6186>, <<82, 0, 0, 0, 12, 0, 0, 0, 5, 188, 234, 102, 118>>}\\r\\nState: %{backend_key: nil, bootstrap: false, opts: [port: 5432, encoder: #Function<17.12881986/3 in Ecto.Adapters.Postgres.prepare_start/2>, decoder: #Function<16.12881986/4 in Ecto.Adapters.Postgres.prepare_start/2>, formatter: #Function<15.12881986/1 in Ecto.Adapters.Postgres.prepare_start/2>, username: \\\"webapp\\\", hostname: \\\"localhost\\\", database: \\\"struct\\\"], parameters: %{}, portal: nil, queue: {[{{:connect, [port: 5432, encoder: #Function<17.12881986/3 in Ecto.Adapters.Postgres.prepare_start/2>, decoder: #Function<16.12881986/4 in Ecto.Adapters.Postgres.prepare_start/2>, formatter: #Function<15.12881986/1 in Ecto.Adapters.Postgres.prepare_start/2>, username: \\\"webapp\\\", hostname: \\\"localhost\\\", database: \\\"struct\\\"]}, {#PID<0.181.0>, #Reference<0.0.0.1954>}, nil}], []}, rows: [], sock: {:gen_tcp, #Port<0.6186>}, state: :auth, statement: nil, tail: \\\"\\\", transactions: 0, types: :types_removed}\\r\\n** (exit) an exception was raised:\\r\\n    ** (ArgumentError) argument error\\r\\n        :erlang.iolist_to_binary([nil, \\\"webapp\\\"])\\r\\n        (crypto) crypto.erl:223: :crypto.hash/2\\r\\n        (postgrex) lib/postgrex/connection.ex:519: Postgrex.Connection.message/3\\r\\n        (postgrex) lib/postgrex/connection.ex:491: Postgrex.Connection.new_data/2\\r\\n        (postgrex) lib/postgrex/connection.ex:401: Postgrex.Connection.handle_info/2\\r\\n        (stdlib) gen_server.erl:599: :gen_server.handle_msg/5\\r\\n        (stdlib) proc_lib.erl:239: :proc_lib.init_p_do_apply/3\\r\\n```\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/311\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/311/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/311/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/311/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/311\",\"id\":48313398,\"number\":311,\"title\":\"mix ecto.create fails when URL includes a custom port\",\"user\":{\"login\":\"bjhaid\",\"id\":593852,\"avatar_url\":\"https://avatars.githubusercontent.com/u/593852?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/bjhaid\",\"html_url\":\"https://github.com/bjhaid\",\"followers_url\":\"https://api.github.com/users/bjhaid/followers\",\"following_url\":\"https://api.github.com/users/bjhaid/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/bjhaid/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/bjhaid/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/bjhaid/subscriptions\",\"organizations_url\":\"https://api.github.com/users/bjhaid/orgs\",\"repos_url\":\"https://api.github.com/users/bjhaid/repos\",\"events_url\":\"https://api.github.com/users/bjhaid/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/bjhaid/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2014-11-10T21:01:04Z\",\"updated_at\":\"2014-11-12T13:27:53Z\",\"closed_at\":\"2014-11-12T13:27:53Z\",\"body\":\"Sample URI with custom port:\\r\\n\\r\\n`\\\"ecto://postgres:postgres@localhost:5433/foo_dev\\\"`\\r\\n\\r\\nmix task to reproduce: `mix ecto.create Repo`\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/333\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/333/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/333/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/333/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/333\",\"id\":52728423,\"number\":333,\"title\":\"Improve Ecto.Model.validate return types\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2014-12-23T10:10:05Z\",\"updated_at\":\"2015-01-09T18:48:05Z\",\"closed_at\":\"2015-01-09T18:48:05Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/381\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/381/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/381/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/381/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/381\",\"id\":54872556,\"number\":381,\"title\":\"Ensure preloads are not called twice\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2015-01-20T11:33:10Z\",\"updated_at\":\"2015-01-20T13:31:54Z\",\"closed_at\":\"2015-01-20T13:31:54Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/423\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/423/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/423/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/423/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/423\",\"id\":56140611,\"number\":423,\"title\":\"change doesn't work when it creates a table and an index\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":10,\"created_at\":\"2015-01-31T21:39:10Z\",\"updated_at\":\"2015-02-09T14:13:34Z\",\"closed_at\":\"2015-02-09T14:13:34Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/449\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/449/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/449/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/449/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/449\",\"id\":57383516,\"number\":449,\"title\":\"Allow only atoms in lock\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":4,\"created_at\":\"2015-02-11T21:55:50Z\",\"updated_at\":\"2015-02-12T16:12:32Z\",\"closed_at\":\"2015-02-12T16:12:32Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/538\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/538/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/538/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/538/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/538\",\"id\":63580788,\"number\":538,\"title\":\"Default engine to InnoDB when creating MySQL databases\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Starter\",\"name\":\"Level:Starter\",\"color\":\"fef2c0\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":3,\"created_at\":\"2015-03-22T22:00:55Z\",\"updated_at\":\"2015-03-24T15:33:54Z\",\"closed_at\":\"2015-03-24T15:33:54Z\",\"body\":\"We should make it an option for storage_up as the other existing options and document it.\\r\\n\\r\\n/cc @laurocaetano @liveforeverx\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/547\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/547/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/547/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/547/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/547\",\"id\":65665811,\"number\":547,\"title\":\"Decimals not saved correctly in Postgres DB\",\"user\":{\"login\":\"swerter\",\"id\":11270,\"avatar_url\":\"https://avatars.githubusercontent.com/u/11270?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/swerter\",\"html_url\":\"https://github.com/swerter\",\"followers_url\":\"https://api.github.com/users/swerter/followers\",\"following_url\":\"https://api.github.com/users/swerter/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/swerter/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/swerter/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/swerter/subscriptions\",\"organizations_url\":\"https://api.github.com/users/swerter/orgs\",\"repos_url\":\"https://api.github.com/users/swerter/repos\",\"events_url\":\"https://api.github.com/users/swerter/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/swerter/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":7,\"created_at\":\"2015-04-01T11:48:27Z\",\"updated_at\":\"2015-04-10T10:13:40Z\",\"closed_at\":\"2015-04-10T09:52:38Z\",\"body\":\"Hi\\r\\nI think I found a bug when trying to save a decimal into a postgresql database. \\r\\nHow to reproduce:\\r\\nChange in the file integration_test/support/migrations.exs the decimal precision to higher value, eg:\\r\\n\\r\\n    add :cost, :decimal, precision: 5, scale: 3\\r\\n\\r\\nThe integration tests then fails: `MIX_ENV=pg mix test`\\r\\n```\\r\\n  1) test primitive types (Ecto.Integration.TypeTest)\\r\\n     integration_test/cases/type.exs:10\\r\\n     match (=) failed\\r\\n     code: [^decimal] = TestRepo.all(from(p in Post, where: p.cost() == ^decimal, select: p.cost()))\\r\\n     rhs:  [#Decimal<1.00>]\\r\\n     stacktrace:\\r\\n       integration_test/cases/type.exs:34\\r\\n```\\r\\n\\r\\nI found this error by trying to save a small number (0.002) to postgres as a decimal. The stored value, however, was always 0.2 instead (only one decimal after the dot).\\r\\n\\r\\nThanks for your help.\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/582\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/582/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/582/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/582/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/582\",\"id\":73055338,\"number\":582,\"title\":\"put_change/3, put_new_change/3 and change/2 should check if the value is different from the one in the model\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1\",\"html_url\":\"https://github.com/elixir-lang/ecto/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1/labels\",\"id\":1092462,\"number\":1,\"title\":\"v1.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":0,\"closed_issues\":27,\"state\":\"closed\",\"created_at\":\"2015-05-01T12:34:05Z\",\"updated_at\":\"2015-09-12T11:30:47Z\",\"due_on\":null,\"closed_at\":\"2015-09-12T11:30:47Z\"},\"comments\":1,\"created_at\":\"2015-05-04T15:42:58Z\",\"updated_at\":\"2015-05-05T08:14:47Z\",\"closed_at\":\"2015-05-05T08:14:47Z\",\"body\":\"If the value is the same as in the model, we won't add it to the list of changes. If it is different, we add it.\\r\\n\\r\\nWe will also introduce `force_change/3` which works as `put_change/3` today.\\r\\n\\r\\nIs someone interested in picking this up? We should release v0.11.1 afterwards with those fixes.\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/586\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/586/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/586/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/586/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/586\",\"id\":73432764,\"number\":586,\"title\":\"Give better error message when an alias is given as type in migration\",\"user\":{\"login\":\"ericmj\",\"id\":316890,\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2015-05-05T21:12:10Z\",\"updated_at\":\"2015-05-06T10:55:07Z\",\"closed_at\":\"2015-05-06T10:55:07Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/621\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/621/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/621/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/621/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/621\",\"id\":81094455,\"number\":621,\"title\":\"validate_number does not work with decimals\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Starter\",\"name\":\"Level:Starter\",\"color\":\"fef2c0\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":3,\"created_at\":\"2015-05-26T19:08:15Z\",\"updated_at\":\"2015-05-30T18:02:15Z\",\"closed_at\":\"2015-05-30T17:44:34Z\",\"body\":\"\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/693\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/693/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/693/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/693/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/693\",\"id\":90754326,\"number\":693,\"title\":\"encoded URI\",\"user\":{\"login\":\"umatomba\",\"id\":1991518,\"avatar_url\":\"https://avatars.githubusercontent.com/u/1991518?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/umatomba\",\"html_url\":\"https://github.com/umatomba\",\"followers_url\":\"https://api.github.com/users/umatomba/followers\",\"following_url\":\"https://api.github.com/users/umatomba/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/umatomba/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/umatomba/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/umatomba/subscriptions\",\"organizations_url\":\"https://api.github.com/users/umatomba/orgs\",\"repos_url\":\"https://api.github.com/users/umatomba/repos\",\"events_url\":\"https://api.github.com/users/umatomba/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/umatomba/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Starter\",\"name\":\"Level:Starter\",\"color\":\"fef2c0\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":1,\"created_at\":\"2015-06-24T18:31:02Z\",\"updated_at\":\"2015-06-29T08:24:14Z\",\"closed_at\":\"2015-06-29T08:24:14Z\",\"body\":\"Currently, the encoded url (f.e. with special characters in password) can not be used, because is not decoded. I think we could add this future to support the URI format.\\r\\n\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/739\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/739/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/739/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/739/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/739\",\"id\":92717966,\"number\":739,\"title\":\"Source is not respected in Preloading\",\"user\":{\"login\":\"reset\",\"id\":54036,\"avatar_url\":\"https://avatars.githubusercontent.com/u/54036?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/reset\",\"html_url\":\"https://github.com/reset\",\"followers_url\":\"https://api.github.com/users/reset/followers\",\"following_url\":\"https://api.github.com/users/reset/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/reset/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/reset/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/reset/subscriptions\",\"organizations_url\":\"https://api.github.com/users/reset/orgs\",\"repos_url\":\"https://api.github.com/users/reset/repos\",\"events_url\":\"https://api.github.com/users/reset/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/reset/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1\",\"html_url\":\"https://github.com/elixir-lang/ecto/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1/labels\",\"id\":1092462,\"number\":1,\"title\":\"v1.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":0,\"closed_issues\":27,\"state\":\"closed\",\"created_at\":\"2015-05-01T12:34:05Z\",\"updated_at\":\"2015-09-12T11:30:47Z\",\"due_on\":null,\"closed_at\":\"2015-09-12T11:30:47Z\"},\"comments\":10,\"created_at\":\"2015-07-02T19:41:33Z\",\"updated_at\":\"2015-07-21T07:21:35Z\",\"closed_at\":\"2015-07-16T22:18:02Z\",\"body\":\"I have an application which leverages Postgres schemas to \\\"shard\\\" data. There are X number of replicas contained within schemas named something like \\\"account_1\\\", \\\"account_2\\\", etc.\\r\\n\\r\\nIn Ecto 10 the ability to query on source was added by specifying `{\\\"account_1.accounts\\\", MyApp.Account}` in a query instead of just `MyApp.Account`. The source is annotated in any records found and it works very nicely when updating or deleting those records.\\r\\n\\r\\nPreloading associations is a problem, however. The source tagged in the metadata of a record is not used when attempting to preload an association, so I see an error like this:\\r\\n\\r\\n```\\r\\n** (Postgrex.Error) ERROR (undefined_table): relation \\\"relationships\\\" does not exist\\r\\n```\\r\\n\\r\\nWhere I would instead expect the relation to be \\\"account_1.relationships\\\".\\r\\n\\r\\nThank you so much for the support. Ecto is really kicking ass for us at Undead Labs!\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/763\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/763/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/763/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/763/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/763\",\"id\":94063495,\"number\":763,\"title\":\"Has many through 2 relations not joining correctly.\",\"user\":{\"login\":\"alanpeabody\",\"id\":19368,\"avatar_url\":\"https://avatars.githubusercontent.com/u/19368?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/alanpeabody\",\"html_url\":\"https://github.com/alanpeabody\",\"followers_url\":\"https://api.github.com/users/alanpeabody/followers\",\"following_url\":\"https://api.github.com/users/alanpeabody/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/alanpeabody/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/alanpeabody/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/alanpeabody/subscriptions\",\"organizations_url\":\"https://api.github.com/users/alanpeabody/orgs\",\"repos_url\":\"https://api.github.com/users/alanpeabody/repos\",\"events_url\":\"https://api.github.com/users/alanpeabody/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/alanpeabody/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":null,\"comments\":2,\"created_at\":\"2015-07-09T14:25:52Z\",\"updated_at\":\"2015-07-11T19:53:41Z\",\"closed_at\":\"2015-07-11T19:53:41Z\",\"body\":\"When joining a multiple tables via has_many through ran into a situation where the tables are not joining correctly. The tables are referenced before they are defined in the SQL.\\r\\n\\r\\nExample:\\r\\n\\r\\n```elixir\\r\\n\\r\\ndefmodule Models do\\r\\n  defmodule User do\\r\\n    use Ecto.Model\\r\\n    schema \\\"users\\\" do\\r\\n      has_many :team_members, Models.TeamMember\\r\\n      has_many :environments, through: [:team_members, :environment]\\r\\n      has_many :applications, through: [:team_members, :environment, :applications]\\r\\n    end\\r\\n  end\\r\\n\\r\\n  defmodule TeamMember do\\r\\n    use Ecto.Model\\r\\n    schema \\\"team_members\\\" do\\r\\n      belongs_to :team_members, Models.TeamMember\\r\\n      belongs_to :environments, Models.Environment\\r\\n    end\\r\\n  end\\r\\n\\r\\n  defmodule Environment do\\r\\n    use Ecto.Model\\r\\n    schema \\\"environments\\\" do\\r\\n      has_many :team_members, Models.TeamMember\\r\\n      has_many :applications, Models.Application\\r\\n    end\\r\\n  end\\r\\n\\r\\n  defmodule Application do\\r\\n    use Ecto.Model\\r\\n    schema \\\"applications\\\" do\\r\\n      belongs_to :environment, Models.Environment\\r\\n    end\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\nGiven data is populated and tables are correctly setup.\\r\\n\\r\\n```elixir\\r\\nuser = Repo.find(Models.User, 1)\\r\\nEcto.Model.assoc(user, :applications)\\r\\n|> IO.inspect\\r\\n|> Repo.all\\r\\n```\\r\\nEcto.Query:\\r\\n```\\r\\n#Ecto.Query<from a in Models.Application,\\r\\n join: e in assoc(a, :environment), join: t in assoc(e, :team_members),\\r\\n where: t.user_id == ^1, distinct: [a.id], select: a>\\r\\n```\\r\\nSQL:\\r\\n```\\r\\n[debug] SELECT DISTINCT a0.\\\"id\\\", a0.\\\"name\\\", a0.\\\"inserted_at\\\", a0.\\\"updated_at\\\", a0.\\\"environment_id\\\" FROM \\\"applications\\\" AS a0 INNER JOIN \\\"environments\\\" AS e1 ON e1.\\\"id\\\" = t2.\\\"environment_id\\\" INNER JOIN \\\"team_members\\\" AS t2 ON a0.\\\"environment_id\\\" = e1.\\\"id\\\" WHERE (t2.\\\"user_id\\\" IN ($1))\\r\\n```\\r\\n\\r\\nError:\\r\\n```\\r\\n(Postgrex.Error) ERROR (undefined_table): missing FROM-clause entry for table \\\"t2\\\"\\r\\n```\\r\\n\",\"score\":1.0},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/804\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/ecto\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/804/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/804/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/ecto/issues/804/events\",\"html_url\":\"https://github.com/elixir-lang/ecto/issues/804\",\"id\":95802282,\"number\":804,\"title\":\"Migration with reference can not be rolled back\",\"user\":{\"login\":\"ashneyderman\",\"id\":27250,\"avatar_url\":\"https://avatars.githubusercontent.com/u/27250?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ashneyderman\",\"html_url\":\"https://github.com/ashneyderman\",\"followers_url\":\"https://api.github.com/users/ashneyderman/followers\",\"following_url\":\"https://api.github.com/users/ashneyderman/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ashneyderman/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ashneyderman/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ashneyderman/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ashneyderman/orgs\",\"repos_url\":\"https://api.github.com/users/ashneyderman/repos\",\"events_url\":\"https://api.github.com/users/ashneyderman/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ashneyderman/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"fc2929\"},{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/labels/Level:Intermediate\",\"name\":\"Level:Intermediate\",\"color\":\"fad8c7\"}],\"state\":\"closed\",\"locked\":false,\"assignee\":null,\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1\",\"html_url\":\"https://github.com/elixir-lang/ecto/milestones/v1.0\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/ecto/milestones/1/labels\",\"id\":1092462,\"number\":1,\"title\":\"v1.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":0,\"closed_issues\":27,\"state\":\"closed\",\"created_at\":\"2015-05-01T12:34:05Z\",\"updated_at\":\"2015-09-12T11:30:47Z\",\"due_on\":null,\"closed_at\":\"2015-09-12T11:30:47Z\"},\"comments\":3,\"created_at\":\"2015-07-18T08:12:46Z\",\"updated_at\":\"2015-07-23T21:40:07Z\",\"closed_at\":\"2015-07-23T21:40:07Z\",\"body\":\"Here is my migration\\r\\n\\r\\n```\\r\\ndefmodule EctoPlay.Repo.Migrations.Meteo do\\r\\n  use Ecto.Migration\\r\\n\\r\\n  def change do\\r\\n    create table(:report) do\\r\\n      add :name,  :string\\r\\n      add :month, :string, size: 7\\r\\n      timestamps\\r\\n    end\\r\\n    \\r\\n    create table(:weather) do\\r\\n      add :city,    :string, size: 40\\r\\n      add :temp_lo, :integer\\r\\n      add :temp_hi, :integer\\r\\n      add :prcp,    :float\\r\\n      add :report_id, references(:report)\\r\\n      timestamps\\r\\n    end\\r\\n  end\\r\\n\\r\\nend\\r\\n```\\r\\n\\r\\nHere is the result of ecto.migrate\\r\\n\\r\\n```\\r\\n10:05:45 ecto_play(master) > mix ecto.migrate -all --repo EctoPlay.Repo \\r\\n\\r\\n10:06:41.284 [info]  == Running EctoPlay.Repo.Migrations.Meteo.change/0 forward\\r\\n\\r\\n10:06:41.284 [info]  create table report\\r\\n\\r\\n10:06:41.290 [info]  create table weather\\r\\n\\r\\n10:06:41.297 [info]  == Migrated in 0.1s\\r\\n```\\r\\n\\r\\nAnd here is the error rolling it back\\r\\n\\r\\n```\\r\\n10:06:41 ecto_play(master) > mix ecto.rollback -v 20150709201340 --repo EctoPlay.Repo \\r\\n\\r\\n10:06:54.667 [info]  == Running EctoPlay.Repo.Migrations.Meteo.change/0 backward\\r\\n\\r\\n10:06:54.667 [info]  drop table report\\r\\n** (Postgrex.Error) ERROR (dependent_objects_still_exist): cannot drop table report because other objects depend on it\\r\\n    (ecto) lib/ecto/adapters/sql.ex:170: Ecto.Adapters.SQL.query/4\\r\\n    (ecto) lib/ecto/adapters/postgres.ex:61: Ecto.Adapters.Postgres.execute_ddl/3\\r\\n    _build/dev/lib/ecto_play/priv/repo/migrations/20150709201340_meteo.exs:5: EctoPlay.Repo.Migrations.Meteo.change/0\\r\\n    (stdlib) timer.erl:194: :timer.tc/3\\r\\n    (ecto) lib/ecto/migration/runner.ex:22: Ecto.Migration.Runner.run/6\\r\\n    (ecto) lib/ecto/migrator.ex:113: Ecto.Migrator.attempt/6\\r\\n    (ecto) lib/ecto/migrator.ex:93: anonymous fn/4 in Ecto.Migrator.do_down/4\\r\\n    (ecto) lib/ecto/adapters/sql.ex:479: Ecto.Adapters.SQL.transaction/9\\r\\n```\\r\\n\\r\\n\",\"score\":1.0}]}",
      "headers": {
        "Server": "GitHub.com",
        "Date": "Tue, 09 Feb 2016 15:13:35 GMT",
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "76545",
        "Status": "200 OK",
        "X-RateLimit-Limit": "10",
        "X-RateLimit-Remaining": "9",
        "X-RateLimit-Reset": "1455030875",
        "Cache-Control": "no-cache",
        "X-GitHub-Media-Type": "github.v3; format=json",
        "Link": "<https://api.github.com/search/issues?q=repo%3Aelixir-lang%2Fecto+state%3Aclosed+label%3AKind%3ABug&sort=created&order=asc&page=2>; rel=\"next\", <https://api.github.com/search/issues?q=repo%3Aelixir-lang%2Fecto+state%3Aclosed+label%3AKind%3ABug&sort=created&order=asc&page=2>; rel=\"last\"",
        "Access-Control-Allow-Credentials": "true",
        "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
        "Access-Control-Allow-Origin": "*",
        "Content-Security-Policy": "default-src 'none'",
        "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
        "X-Content-Type-Options": "nosniff",
        "X-Frame-Options": "deny",
        "X-XSS-Protection": "1; mode=block",
        "Vary": "Accept-Encoding",
        "X-Served-By": "318e55760cf7cdb40e61175a4d36cd32",
        "X-GitHub-Request-Id": "5940D12D:16023:B0A031C:56BA021E"
      },
      "status_code": 200,
      "type": "ok"
    }
  }
]